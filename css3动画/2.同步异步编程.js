{
  /**
   * 1.什么是进程，什么是线程，CPU是干啥的，内存是干啥的
   * 进程：电脑每开一个程序（浏览器打开一个页面）就是一个进程（process）
   * 线程：一个进程中，可能要同时处理很多任务，每一个任务都是基于线程处理的（thread）
   * 内存：栈内存（stack）和堆内存（heap）
   * CPU：
   */

  /**
   * 同步：任务是一次执行的，上一个任务没有完成，下一个任务不能进行处理（JS单线程）
   * 异步：上一个事情没有完成，下一个事情也可以继续处理（浏览器多线程）
   * 
   * JS中的事件循环：JS是单线程的，但是也存在异步编程，定时器、事件绑定...
   * 主线程自上而下执行代码，当遇到异步事件时，把异步的事件放到等待任务队列，
   * 等主线程任务执行完成之后，就到等待任务队列中查找到达时间的任务
   *  ，拿到主线程所在的内存执行，依次类推... "事件循环" （Event Loop）
   * 
   * 定时器是异步编程的
   *    定时器时间写0也不是立即执行，而是有一个最小的等待时间10ms左右
   *    定时器设置了一个等待时间，到达时间也不一定执行，如果主线程还被占用了，所有任务
   * 都要等主线程空闲出来，才能被安排执行
   */

  let n = 0;
  setTimeout(() => {
    n++;
    console.log(n);//3.=> 3
  }, 500);
  setTimeout(() => {
    n+=2;
    console.log(n);//2.=> 2  for循环完成之前已经到达时间
  }, 50);
  for(let i = 0;i<90000000;i++){} //耗时约166毫秒
  setTimeout(() => {
    n+=3;
    console.log(n);//4.=>6
  }, 20);
  console.log(n);//1.=>0
  
}